// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import 'dart:core';
import 'auto_inject_test.dart' as prefix1;
import 'package:reflect_inject/annotations/inject.dart' as prefix3;
import 'package:reflect_inject/annotations/reflection.dart' as prefix0;
import 'package:reflect_inject/global/instances.dart' as prefix2;

// ignore_for_file: camel_case_types
// ignore_for_file: implementation_imports
// ignore_for_file: prefer_adjacent_string_concatenation
// ignore_for_file: prefer_collection_literals
// ignore_for_file: unnecessary_const

// ignore:unused_import
import 'package:reflectable/mirrors.dart' as m;
// ignore:unused_import
import 'package:reflectable/src/reflectable_builder_based.dart' as r;
// ignore:unused_import
import 'package:reflectable/reflectable.dart' as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.Reflection(): r.ReflectorData(
      <m.TypeMirror>[
        r.NonGenericClassMirrorImpl(
            r'RepositoryTestImpl',
            r'.RepositoryTestImpl',
            134217735,
            0,
            const prefix0.Reflection(),
            const <int>[2, 3],
            const <int>[4, 5, 6, 7, 8, 2],
            const <int>[],
            -1,
            {},
            {},
            {r'': (bool b) => () => b ? prefix1.RepositoryTestImpl() : null},
            0,
            0,
            const <int>[],
            const <Object>[prefix2.reflection],
            null),
        r.NonGenericClassMirrorImpl(
            r'ServiceTest',
            r'.ServiceTest',
            134217735,
            1,
            const prefix0.Reflection(),
            const <int>[0, 9, 12, 13],
            const <int>[4, 5, 6, 7, 8, 14, 9, 10, 11, 12],
            const <int>[],
            3,
            {},
            {},
            {r'': (bool b) => () => b ? prefix1.ServiceTest() : null},
            0,
            1,
            const <int>[],
            const <Object>[prefix2.reflection],
            null),
        r.NonGenericClassMirrorImpl(
            r'ControllerTest',
            r'.ControllerTest',
            134217735,
            2,
            const prefix0.Reflection(),
            const <int>[1, 15, 18, 19],
            const <int>[4, 5, 6, 7, 8, 14, 15, 16, 17, 18],
            const <int>[],
            4,
            {},
            {},
            {r'': (bool b) => () => b ? prefix1.ControllerTest() : null},
            0,
            2,
            const <int>[],
            const <Object>[prefix2.reflection],
            null),
        r.NonGenericClassMirrorImpl(
            r'dart.core.Object with .AutoInject',
            r'.dart.core.Object with .AutoInject',
            134218311,
            3,
            const prefix0.Reflection(),
            const <int>[14],
            const <int>[4, 5, 6, 7, 8, 14],
            const <int>[],
            -1,
            const {},
            const {},
            const {},
            0,
            -1,
            const <int>[],
            const [],
            null),
        r.NonGenericClassMirrorImpl(
            r'dart.core.Object with .AutoInject',
            r'.dart.core.Object with .AutoInject',
            134218311,
            4,
            const prefix0.Reflection(),
            const <int>[14],
            const <int>[4, 5, 6, 7, 8, 14],
            const <int>[],
            -1,
            const {},
            const {},
            const {},
            0,
            -1,
            const <int>[],
            const [],
            null)
      ],
      <m.DeclarationMirror>[
        r.VariableMirrorImpl(r'repository', 134349829, 1,
            const prefix0.Reflection(), -1, 5, 5, const <int>[], const <Object>[
          const prefix3.Inject(
              nameSetter: "setRepository", type: prefix1.RepositoryTestImpl)
        ]),
        r.VariableMirrorImpl(
            r'service',
            134349829,
            2,
            const prefix0.Reflection(),
            1,
            1,
            1,
            const <int>[],
            const <Object>[const prefix3.Inject(nameSetter: "setService")]),
        r.MethodMirrorImpl(
            r'hello',
            2097154,
            0,
            -1,
            6,
            6,
            const <int>[],
            const <int>[],
            const prefix0.Reflection(),
            const <Object>[override]),
        r.MethodMirrorImpl(r'', 64, 0, -1, 0, 0, const <int>[], const <int>[],
            const prefix0.Reflection(), const []),
        r.MethodMirrorImpl(r'==', 2097154, -1, -1, 7, 7, const <int>[],
            const <int>[0], const prefix0.Reflection(), const []),
        r.MethodMirrorImpl(r'toString', 2097154, -1, -1, 6, 6, const <int>[],
            const <int>[], const prefix0.Reflection(), const []),
        r.MethodMirrorImpl(
            r'noSuchMethod',
            524290,
            -1,
            -1,
            -1,
            -1,
            const <int>[],
            const <int>[1],
            const prefix0.Reflection(),
            const []),
        r.MethodMirrorImpl(r'hashCode', 2097155, -1, -1, 8, 8, const <int>[],
            const <int>[], const prefix0.Reflection(), const []),
        r.MethodMirrorImpl(r'runtimeType', 2097155, -1, -1, 9, 9, const <int>[],
            const <int>[], const prefix0.Reflection(), const []),
        r.MethodMirrorImpl(r'hello', 2097154, 1, -1, 6, 6, const <int>[],
            const <int>[], const prefix0.Reflection(), const []),
        r.ImplicitGetterMirrorImpl(const prefix0.Reflection(), 0, 10),
        r.ImplicitSetterMirrorImpl(const prefix0.Reflection(), 0, 11),
        r.MethodMirrorImpl(
            r'setRepository=',
            1310724,
            1,
            -1,
            -1,
            -1,
            const <int>[],
            const <int>[3],
            const prefix0.Reflection(),
            const []),
        r.MethodMirrorImpl(r'', 0, 1, -1, 1, 1, const <int>[], const <int>[],
            const prefix0.Reflection(), const []),
        r.MethodMirrorImpl(r'inject', 1310722, -1, -1, -1, -1, const <int>[],
            const <int>[], const prefix0.Reflection(), const []),
        r.MethodMirrorImpl(r'hello', 2097154, 2, -1, 6, 6, const <int>[],
            const <int>[], const prefix0.Reflection(), const []),
        r.ImplicitGetterMirrorImpl(const prefix0.Reflection(), 1, 16),
        r.ImplicitSetterMirrorImpl(const prefix0.Reflection(), 1, 17),
        r.MethodMirrorImpl(
            r'setService=',
            1310724,
            2,
            -1,
            -1,
            -1,
            const <int>[],
            const <int>[5],
            const prefix0.Reflection(),
            const []),
        r.MethodMirrorImpl(r'', 0, 2, -1, 2, 2, const <int>[], const <int>[],
            const prefix0.Reflection(), const [])
      ],
      <m.ParameterMirror>[
        r.ParameterMirrorImpl(
            r'other',
            134348806,
            4,
            const prefix0.Reflection(),
            -1,
            10,
            10,
            const <int>[],
            const [],
            null,
            null),
        r.ParameterMirrorImpl(
            r'invocation',
            134348806,
            6,
            const prefix0.Reflection(),
            -1,
            11,
            11,
            const <int>[],
            const [],
            null,
            null),
        r.ParameterMirrorImpl(
            r'_repository',
            134348902,
            11,
            const prefix0.Reflection(),
            -1,
            5,
            5,
            const <int>[],
            const [],
            null,
            null),
        r.ParameterMirrorImpl(
            r'repository',
            134348806,
            12,
            const prefix0.Reflection(),
            -1,
            5,
            5,
            const <int>[],
            const [],
            null,
            null),
        r.ParameterMirrorImpl(
            r'_service',
            134348902,
            17,
            const prefix0.Reflection(),
            1,
            1,
            1,
            const <int>[],
            const [],
            null,
            null),
        r.ParameterMirrorImpl(
            r'service',
            134348806,
            18,
            const prefix0.Reflection(),
            1,
            1,
            1,
            const <int>[],
            const [],
            null,
            null)
      ],
      <Type>[
        prefix1.RepositoryTestImpl,
        prefix1.ServiceTest,
        prefix1.ControllerTest,
        const r.FakeType(r'.dart.core.Object with .AutoInject'),
        const r.FakeType(r'.dart.core.Object with .AutoInject'),
        prefix1.RepositoryTest,
        String,
        bool,
        int,
        Type,
        Object,
        Invocation
      ],
      5,
      {
        r'==': (dynamic instance) => (x) => instance == x,
        r'toString': (dynamic instance) => instance.toString,
        r'noSuchMethod': (dynamic instance) => instance.noSuchMethod,
        r'hashCode': (dynamic instance) => instance.hashCode,
        r'runtimeType': (dynamic instance) => instance.runtimeType,
        r'hello': (dynamic instance) => instance.hello,
        r'inject': (dynamic instance) => instance.inject,
        r'repository': (dynamic instance) => instance.repository,
        r'service': (dynamic instance) => instance.service
      },
      {
        r'repository=': (dynamic instance, value) =>
            instance.repository = value,
        r'setRepository=': (dynamic instance, value) =>
            instance.setRepository = value,
        r'service=': (dynamic instance, value) => instance.service = value,
        r'setService=': (dynamic instance, value) => instance.setService = value
      },
      <m.LibraryMirror>[
        r.LibraryMirrorImpl(
            r'',
            Uri.parse('asset:reflect_inject/test/auto_inject_test.dart'),
            const prefix0.Reflection(),
            const <int>[],
            {},
            {},
            const [],
            null)
      ],
      [])
};

const _memberSymbolMap = null;

void initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}

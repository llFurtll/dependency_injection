// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import 'dart:core';
import 'main.dart' as prefix1;
import 'package:dependency_injection/annotations/autowired.dart' as prefix2;
import 'package:dependency_injection/annotations/reflection.dart' as prefix0;

// ignore_for_file: camel_case_types
// ignore_for_file: implementation_imports
// ignore_for_file: prefer_adjacent_string_concatenation
// ignore_for_file: prefer_collection_literals
// ignore_for_file: unnecessary_const

// ignore:unused_import
import 'package:reflectable/mirrors.dart' as m;
// ignore:unused_import
import 'package:reflectable/src/reflectable_builder_based.dart' as r;
// ignore:unused_import
import 'package:reflectable/reflectable.dart' as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.Reflection(): r.ReflectorData(
      <m.TypeMirror>[
        r.NonGenericClassMirrorImpl(
            r'Teste',
            r'.Teste',
            134217735,
            0,
            const prefix0.Reflection(),
            const <int>[0, 3, 4, 5],
            const <int>[6, 7, 8, 9, 10, 11, 1, 2, 3, 4],
            const <int>[],
            -1,
            {},
            {},
            {r'': (bool b) => () => b ? prefix1.Teste() : null},
            0,
            0,
            const <int>[],
            const <Object>[const prefix0.Reflection()],
            null)
      ],
      <m.DeclarationMirror>[
        r.VariableMirrorImpl(
            r'repository',
            134349829,
            0,
            const prefix0.Reflection(),
            -1,
            1,
            1,
            const <int>[],
            const <Object>[const prefix2.Autowired()]),
        r.ImplicitGetterMirrorImpl(const prefix0.Reflection(), 0, 1),
        r.ImplicitSetterMirrorImpl(const prefix0.Reflection(), 0, 2),
        r.MethodMirrorImpl(r'teste=', 1310724, 0, -1, -1, -1, const <int>[],
            const <int>[1], const prefix0.Reflection(), const []),
        r.MethodMirrorImpl(
            r'setRepository=',
            1310724,
            0,
            -1,
            -1,
            -1,
            const <int>[],
            const <int>[2],
            const prefix0.Reflection(),
            const []),
        r.MethodMirrorImpl(r'', 64, 0, -1, 0, 0, const <int>[], const <int>[],
            const prefix0.Reflection(), const []),
        r.MethodMirrorImpl(r'==', 2097154, -1, -1, 2, 2, const <int>[],
            const <int>[3], const prefix0.Reflection(), const []),
        r.MethodMirrorImpl(r'toString', 2097154, -1, -1, 3, 3, const <int>[],
            const <int>[], const prefix0.Reflection(), const []),
        r.MethodMirrorImpl(
            r'noSuchMethod',
            524290,
            -1,
            -1,
            -1,
            -1,
            const <int>[],
            const <int>[4],
            const prefix0.Reflection(),
            const []),
        r.MethodMirrorImpl(r'hashCode', 2097155, -1, -1, 4, 4, const <int>[],
            const <int>[], const prefix0.Reflection(), const []),
        r.MethodMirrorImpl(r'runtimeType', 2097155, -1, -1, 5, 5, const <int>[],
            const <int>[], const prefix0.Reflection(), const []),
        r.MethodMirrorImpl(r'inject', 1310722, -1, -1, -1, -1, const <int>[],
            const <int>[], const prefix0.Reflection(), const [])
      ],
      <m.ParameterMirror>[
        r.ParameterMirrorImpl(
            r'_repository',
            134348902,
            2,
            const prefix0.Reflection(),
            -1,
            1,
            1,
            const <int>[],
            const [],
            null,
            null),
        r.ParameterMirrorImpl(
            r'repository',
            134348806,
            3,
            const prefix0.Reflection(),
            -1,
            1,
            1,
            const <int>[],
            const [],
            null,
            null),
        r.ParameterMirrorImpl(
            r'repository',
            134348806,
            4,
            const prefix0.Reflection(),
            -1,
            1,
            1,
            const <int>[],
            const [],
            null,
            null),
        r.ParameterMirrorImpl(
            r'other',
            134348806,
            6,
            const prefix0.Reflection(),
            -1,
            6,
            6,
            const <int>[],
            const [],
            null,
            null),
        r.ParameterMirrorImpl(
            r'invocation',
            134348806,
            8,
            const prefix0.Reflection(),
            -1,
            7,
            7,
            const <int>[],
            const [],
            null,
            null)
      ],
      <Type>[
        prefix1.Teste,
        prefix1.IRepository,
        bool,
        String,
        int,
        Type,
        Object,
        Invocation
      ],
      1,
      {
        r'==': (dynamic instance) => (x) => instance == x,
        r'toString': (dynamic instance) => instance.toString,
        r'noSuchMethod': (dynamic instance) => instance.noSuchMethod,
        r'hashCode': (dynamic instance) => instance.hashCode,
        r'runtimeType': (dynamic instance) => instance.runtimeType,
        r'inject': (dynamic instance) => instance.inject,
        r'repository': (dynamic instance) => instance.repository
      },
      {
        r'repository=': (dynamic instance, value) =>
            instance.repository = value,
        r'teste=': (dynamic instance, value) => instance.teste = value,
        r'setRepository=': (dynamic instance, value) =>
            instance.setRepository = value
      },
      <m.LibraryMirror>[
        r.LibraryMirrorImpl(
            r'',
            Uri.parse('package:dependency_injection/main.dart'),
            const prefix0.Reflection(),
            const <int>[],
            {},
            {},
            const [],
            null)
      ],
      [])
};

final _memberSymbolMap = null;

void initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
